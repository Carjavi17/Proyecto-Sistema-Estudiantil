<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCAAxAEwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD6
        a/4N+FXV/wDgnrosP/LSyvb2Bx/dZbyfj9RXF6ZbaHon7eX7Tf7S3i/7Jqeh/AFl0HRdMuLfzBNqi2kM
        cDqW+QlJGIC9Q0wbjArpP+Dcl7vT/gb4y8L6hC1tcaX4gnuIo3ddzW9wsc8TgA52tmQg+1Y37cf7OHiL
        4g/BPQPg94am/s3UPjh8WvEnjXxLf7dzW+n2t5KkRI/iOPs+0HjMQzwDX1mYYqtl+Lx1On7s6l4K/RTk
        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
</value>
  </data>
</root>